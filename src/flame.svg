<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="698" onload="init(evt)" viewBox="0 0 1200 698" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = true;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="698" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">py-spy record -o flame.svg -- python main.py --loglevel INFO -w 1 -f muestras.txt</text><text id="details" fill="rgb(0,0,0)" x="10" y="40.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="687.00"> </text><svg id="frames" x="10" width="1180" total_samples="3077"><g><title>&lt;module&gt; (src\main.py:11) (7 samples, 0.23%)</title><rect x="0.0325%" y="68" width="0.2275%" height="15" fill="rgb(227,0,7)" fg:x="1" fg:w="7"/><text x="0.2825%" y="78.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1027) (7 samples, 0.23%)</title><rect x="0.0325%" y="84" width="0.2275%" height="15" fill="rgb(217,0,24)" fg:x="1" fg:w="7"/><text x="0.2825%" y="94.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1006) (7 samples, 0.23%)</title><rect x="0.0325%" y="100" width="0.2275%" height="15" fill="rgb(221,193,54)" fg:x="1" fg:w="7"/><text x="0.2825%" y="110.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:688) (7 samples, 0.23%)</title><rect x="0.0325%" y="116" width="0.2275%" height="15" fill="rgb(248,212,6)" fg:x="1" fg:w="7"/><text x="0.2825%" y="126.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:883) (7 samples, 0.23%)</title><rect x="0.0325%" y="132" width="0.2275%" height="15" fill="rgb(208,68,35)" fg:x="1" fg:w="7"/><text x="0.2825%" y="142.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (7 samples, 0.23%)</title><rect x="0.0325%" y="148" width="0.2275%" height="15" fill="rgb(232,128,0)" fg:x="1" fg:w="7"/><text x="0.2825%" y="158.50"></text></g><g><title>&lt;module&gt; (src\utils\logging_utils.py:4) (5 samples, 0.16%)</title><rect x="0.0975%" y="164" width="0.1625%" height="15" fill="rgb(207,160,47)" fg:x="3" fg:w="5"/><text x="0.3475%" y="174.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1027) (5 samples, 0.16%)</title><rect x="0.0975%" y="180" width="0.1625%" height="15" fill="rgb(228,23,34)" fg:x="3" fg:w="5"/><text x="0.3475%" y="190.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1006) (5 samples, 0.16%)</title><rect x="0.0975%" y="196" width="0.1625%" height="15" fill="rgb(218,30,26)" fg:x="3" fg:w="5"/><text x="0.3475%" y="206.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:688) (5 samples, 0.16%)</title><rect x="0.0975%" y="212" width="0.1625%" height="15" fill="rgb(220,122,19)" fg:x="3" fg:w="5"/><text x="0.3475%" y="222.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:883) (5 samples, 0.16%)</title><rect x="0.0975%" y="228" width="0.1625%" height="15" fill="rgb(250,228,42)" fg:x="3" fg:w="5"/><text x="0.3475%" y="238.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (5 samples, 0.16%)</title><rect x="0.0975%" y="244" width="0.1625%" height="15" fill="rgb(240,193,28)" fg:x="3" fg:w="5"/><text x="0.3475%" y="254.50"></text></g><g><title>&lt;module&gt; (numpy\__init__.py:141) (4 samples, 0.13%)</title><rect x="0.2925%" y="548" width="0.1300%" height="15" fill="rgb(216,20,37)" fg:x="9" fg:w="4"/><text x="0.5425%" y="558.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1078) (4 samples, 0.13%)</title><rect x="0.2925%" y="564" width="0.1300%" height="15" fill="rgb(206,188,39)" fg:x="9" fg:w="4"/><text x="0.5425%" y="574.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (4 samples, 0.13%)</title><rect x="0.2925%" y="580" width="0.1300%" height="15" fill="rgb(217,207,13)" fg:x="9" fg:w="4"/><text x="0.5425%" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1027) (4 samples, 0.13%)</title><rect x="0.2925%" y="596" width="0.1300%" height="15" fill="rgb(231,73,38)" fg:x="9" fg:w="4"/><text x="0.5425%" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1006) (4 samples, 0.13%)</title><rect x="0.2925%" y="612" width="0.1300%" height="15" fill="rgb(225,20,46)" fg:x="9" fg:w="4"/><text x="0.5425%" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:688) (4 samples, 0.13%)</title><rect x="0.2925%" y="628" width="0.1300%" height="15" fill="rgb(210,31,41)" fg:x="9" fg:w="4"/><text x="0.5425%" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:883) (4 samples, 0.13%)</title><rect x="0.2925%" y="644" width="0.1300%" height="15" fill="rgb(221,200,47)" fg:x="9" fg:w="4"/><text x="0.5425%" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (4 samples, 0.13%)</title><rect x="0.2925%" y="660" width="0.1300%" height="15" fill="rgb(226,26,5)" fg:x="9" fg:w="4"/><text x="0.5425%" y="670.50"></text></g><g><title>&lt;module&gt; (numpy\__init__.py:146) (4 samples, 0.13%)</title><rect x="0.4225%" y="548" width="0.1300%" height="15" fill="rgb(249,33,26)" fg:x="13" fg:w="4"/><text x="0.6725%" y="558.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1078) (4 samples, 0.13%)</title><rect x="0.4225%" y="564" width="0.1300%" height="15" fill="rgb(235,183,28)" fg:x="13" fg:w="4"/><text x="0.6725%" y="574.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (4 samples, 0.13%)</title><rect x="0.4225%" y="580" width="0.1300%" height="15" fill="rgb(221,5,38)" fg:x="13" fg:w="4"/><text x="0.6725%" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1027) (4 samples, 0.13%)</title><rect x="0.4225%" y="596" width="0.1300%" height="15" fill="rgb(247,18,42)" fg:x="13" fg:w="4"/><text x="0.6725%" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1006) (4 samples, 0.13%)</title><rect x="0.4225%" y="612" width="0.1300%" height="15" fill="rgb(241,131,45)" fg:x="13" fg:w="4"/><text x="0.6725%" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:688) (4 samples, 0.13%)</title><rect x="0.4225%" y="628" width="0.1300%" height="15" fill="rgb(249,31,29)" fg:x="13" fg:w="4"/><text x="0.6725%" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:883) (4 samples, 0.13%)</title><rect x="0.4225%" y="644" width="0.1300%" height="15" fill="rgb(225,111,53)" fg:x="13" fg:w="4"/><text x="0.6725%" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (4 samples, 0.13%)</title><rect x="0.4225%" y="660" width="0.1300%" height="15" fill="rgb(238,160,17)" fg:x="13" fg:w="4"/><text x="0.6725%" y="670.50"></text></g><g><title>&lt;module&gt; (cv2\__init__.py:11) (11 samples, 0.36%)</title><rect x="0.2600%" y="452" width="0.3575%" height="15" fill="rgb(214,148,48)" fg:x="8" fg:w="11"/><text x="0.5100%" y="462.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1027) (11 samples, 0.36%)</title><rect x="0.2600%" y="468" width="0.3575%" height="15" fill="rgb(232,36,49)" fg:x="8" fg:w="11"/><text x="0.5100%" y="478.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1006) (11 samples, 0.36%)</title><rect x="0.2600%" y="484" width="0.3575%" height="15" fill="rgb(209,103,24)" fg:x="8" fg:w="11"/><text x="0.5100%" y="494.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:688) (11 samples, 0.36%)</title><rect x="0.2600%" y="500" width="0.3575%" height="15" fill="rgb(229,88,8)" fg:x="8" fg:w="11"/><text x="0.5100%" y="510.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:883) (11 samples, 0.36%)</title><rect x="0.2600%" y="516" width="0.3575%" height="15" fill="rgb(213,181,19)" fg:x="8" fg:w="11"/><text x="0.5100%" y="526.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (11 samples, 0.36%)</title><rect x="0.2600%" y="532" width="0.3575%" height="15" fill="rgb(254,191,54)" fg:x="8" fg:w="11"/><text x="0.5100%" y="542.50"></text></g><g><title>&lt;module&gt; (src\main.py:12) (12 samples, 0.39%)</title><rect x="0.2600%" y="68" width="0.3900%" height="15" fill="rgb(241,83,37)" fg:x="8" fg:w="12"/><text x="0.5100%" y="78.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1027) (12 samples, 0.39%)</title><rect x="0.2600%" y="84" width="0.3900%" height="15" fill="rgb(233,36,39)" fg:x="8" fg:w="12"/><text x="0.5100%" y="94.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1006) (12 samples, 0.39%)</title><rect x="0.2600%" y="100" width="0.3900%" height="15" fill="rgb(226,3,54)" fg:x="8" fg:w="12"/><text x="0.5100%" y="110.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:688) (12 samples, 0.39%)</title><rect x="0.2600%" y="116" width="0.3900%" height="15" fill="rgb(245,192,40)" fg:x="8" fg:w="12"/><text x="0.5100%" y="126.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:883) (12 samples, 0.39%)</title><rect x="0.2600%" y="132" width="0.3900%" height="15" fill="rgb(238,167,29)" fg:x="8" fg:w="12"/><text x="0.5100%" y="142.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (12 samples, 0.39%)</title><rect x="0.2600%" y="148" width="0.3900%" height="15" fill="rgb(232,182,51)" fg:x="8" fg:w="12"/><text x="0.5100%" y="158.50"></text></g><g><title>&lt;module&gt; (src\ui\cli_controller.py:13) (12 samples, 0.39%)</title><rect x="0.2600%" y="164" width="0.3900%" height="15" fill="rgb(231,60,39)" fg:x="8" fg:w="12"/><text x="0.5100%" y="174.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1027) (12 samples, 0.39%)</title><rect x="0.2600%" y="180" width="0.3900%" height="15" fill="rgb(208,69,12)" fg:x="8" fg:w="12"/><text x="0.5100%" y="190.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1006) (12 samples, 0.39%)</title><rect x="0.2600%" y="196" width="0.3900%" height="15" fill="rgb(235,93,37)" fg:x="8" fg:w="12"/><text x="0.5100%" y="206.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:688) (12 samples, 0.39%)</title><rect x="0.2600%" y="212" width="0.3900%" height="15" fill="rgb(213,116,39)" fg:x="8" fg:w="12"/><text x="0.5100%" y="222.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:883) (12 samples, 0.39%)</title><rect x="0.2600%" y="228" width="0.3900%" height="15" fill="rgb(222,207,29)" fg:x="8" fg:w="12"/><text x="0.5100%" y="238.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (12 samples, 0.39%)</title><rect x="0.2600%" y="244" width="0.3900%" height="15" fill="rgb(206,96,30)" fg:x="8" fg:w="12"/><text x="0.5100%" y="254.50"></text></g><g><title>&lt;module&gt; (src\processing\batch_processor.py:14) (12 samples, 0.39%)</title><rect x="0.2600%" y="260" width="0.3900%" height="15" fill="rgb(218,138,4)" fg:x="8" fg:w="12"/><text x="0.5100%" y="270.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1027) (12 samples, 0.39%)</title><rect x="0.2600%" y="276" width="0.3900%" height="15" fill="rgb(250,191,14)" fg:x="8" fg:w="12"/><text x="0.5100%" y="286.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1006) (12 samples, 0.39%)</title><rect x="0.2600%" y="292" width="0.3900%" height="15" fill="rgb(239,60,40)" fg:x="8" fg:w="12"/><text x="0.5100%" y="302.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:688) (12 samples, 0.39%)</title><rect x="0.2600%" y="308" width="0.3900%" height="15" fill="rgb(206,27,48)" fg:x="8" fg:w="12"/><text x="0.5100%" y="318.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:883) (12 samples, 0.39%)</title><rect x="0.2600%" y="324" width="0.3900%" height="15" fill="rgb(225,35,8)" fg:x="8" fg:w="12"/><text x="0.5100%" y="334.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (12 samples, 0.39%)</title><rect x="0.2600%" y="340" width="0.3900%" height="15" fill="rgb(250,213,24)" fg:x="8" fg:w="12"/><text x="0.5100%" y="350.50"></text></g><g><title>&lt;module&gt; (src\processing\image_processor.py:3) (12 samples, 0.39%)</title><rect x="0.2600%" y="356" width="0.3900%" height="15" fill="rgb(247,123,22)" fg:x="8" fg:w="12"/><text x="0.5100%" y="366.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1027) (12 samples, 0.39%)</title><rect x="0.2600%" y="372" width="0.3900%" height="15" fill="rgb(231,138,38)" fg:x="8" fg:w="12"/><text x="0.5100%" y="382.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1006) (12 samples, 0.39%)</title><rect x="0.2600%" y="388" width="0.3900%" height="15" fill="rgb(231,145,46)" fg:x="8" fg:w="12"/><text x="0.5100%" y="398.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:688) (12 samples, 0.39%)</title><rect x="0.2600%" y="404" width="0.3900%" height="15" fill="rgb(251,118,11)" fg:x="8" fg:w="12"/><text x="0.5100%" y="414.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:883) (12 samples, 0.39%)</title><rect x="0.2600%" y="420" width="0.3900%" height="15" fill="rgb(217,147,25)" fg:x="8" fg:w="12"/><text x="0.5100%" y="430.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (12 samples, 0.39%)</title><rect x="0.2600%" y="436" width="0.3900%" height="15" fill="rgb(247,81,37)" fg:x="8" fg:w="12"/><text x="0.5100%" y="446.50"></text></g><g><title>run (src\main.py:222) (5 samples, 0.16%)</title><rect x="0.6500%" y="100" width="0.1625%" height="15" fill="rgb(209,12,38)" fg:x="20" fg:w="5"/><text x="0.9000%" y="110.50"></text></g><g><title>initialize_database (src\main.py:120) (5 samples, 0.16%)</title><rect x="0.6500%" y="116" width="0.1625%" height="15" fill="rgb(227,1,9)" fg:x="20" fg:w="5"/><text x="0.9000%" y="126.50"></text></g><g><title>initialize (src\database\service.py:45) (5 samples, 0.16%)</title><rect x="0.6500%" y="132" width="0.1625%" height="15" fill="rgb(248,47,43)" fg:x="20" fg:w="5"/><text x="0.9000%" y="142.50"></text></g><g><title>initialize (src\database\connection.py:48) (5 samples, 0.16%)</title><rect x="0.6500%" y="148" width="0.1625%" height="15" fill="rgb(221,10,30)" fg:x="20" fg:w="5"/><text x="0.9000%" y="158.50"></text></g><g><title>read_barcode (src\processing\image_processor.py:342) (493 samples, 16.02%)</title><rect x="1.5925%" y="260" width="16.0221%" height="15" fill="rgb(210,229,1)" fg:x="49" fg:w="493"/><text x="1.8425%" y="270.50">read_barcode (src\process..</text></g><g><title>process_image (src\processing\image_processor.py:102) (501 samples, 16.28%)</title><rect x="1.5925%" y="244" width="16.2821%" height="15" fill="rgb(222,148,37)" fg:x="49" fg:w="501"/><text x="1.8425%" y="254.50">process_image (src\proces..</text></g><g><title>read_barcode (src\processing\image_processor.py:346) (8 samples, 0.26%)</title><rect x="17.6146%" y="260" width="0.2600%" height="15" fill="rgb(234,67,33)" fg:x="542" fg:w="8"/><text x="17.8646%" y="270.50"></text></g><g><title>info (logging\__init__.py:1477) (7 samples, 0.23%)</title><rect x="17.6471%" y="276" width="0.2275%" height="15" fill="rgb(247,98,35)" fg:x="543" fg:w="7"/><text x="17.8971%" y="286.50"></text></g><g><title>_log (logging\__init__.py:1624) (7 samples, 0.23%)</title><rect x="17.6471%" y="292" width="0.2275%" height="15" fill="rgb(247,138,52)" fg:x="543" fg:w="7"/><text x="17.8971%" y="302.50"></text></g><g><title>handle (logging\__init__.py:1634) (7 samples, 0.23%)</title><rect x="17.6471%" y="308" width="0.2275%" height="15" fill="rgb(213,79,30)" fg:x="543" fg:w="7"/><text x="17.8971%" y="318.50"></text></g><g><title>callHandlers (logging\__init__.py:1696) (7 samples, 0.23%)</title><rect x="17.6471%" y="324" width="0.2275%" height="15" fill="rgb(246,177,23)" fg:x="543" fg:w="7"/><text x="17.8971%" y="334.50"></text></g><g><title>handle (logging\__init__.py:968) (7 samples, 0.23%)</title><rect x="17.6471%" y="340" width="0.2275%" height="15" fill="rgb(230,62,27)" fg:x="543" fg:w="7"/><text x="17.8971%" y="350.50"></text></g><g><title>emit (rich\logging.py:178) (6 samples, 0.19%)</title><rect x="17.6796%" y="356" width="0.1950%" height="15" fill="rgb(216,154,8)" fg:x="544" fg:w="6"/><text x="17.9296%" y="366.50"></text></g><g><title>print (rich\console.py:1719) (5 samples, 0.16%)</title><rect x="17.7121%" y="372" width="0.1625%" height="15" fill="rgb(244,35,45)" fg:x="545" fg:w="5"/><text x="17.9621%" y="382.50"></text></g><g><title>render (rich\console.py:1340) (4 samples, 0.13%)</title><rect x="17.7446%" y="388" width="0.1300%" height="15" fill="rgb(251,115,12)" fg:x="546" fg:w="4"/><text x="17.9946%" y="398.50"></text></g><g><title>process_image (src\processing\image_processor.py:134) (68 samples, 2.21%)</title><rect x="17.9396%" y="244" width="2.2099%" height="15" fill="rgb(240,54,50)" fg:x="552" fg:w="68"/><text x="18.1896%" y="254.50">p..</text></g><g><title>_get_reference_template (src\processing\image_processor.py:282) (68 samples, 2.21%)</title><rect x="17.9396%" y="260" width="2.2099%" height="15" fill="rgb(233,84,52)" fg:x="552" fg:w="68"/><text x="18.1896%" y="270.50">_..</text></g><g><title>extract_corners (src\processing\fast_aligner.py:29) (4 samples, 0.13%)</title><rect x="20.5720%" y="276" width="0.1300%" height="15" fill="rgb(207,117,47)" fg:x="633" fg:w="4"/><text x="20.8220%" y="286.50"></text></g><g><title>extract_corners (src\processing\fast_aligner.py:34) (6 samples, 0.19%)</title><rect x="20.7020%" y="276" width="0.1950%" height="15" fill="rgb(249,43,39)" fg:x="637" fg:w="6"/><text x="20.9520%" y="286.50"></text></g><g><title>extract_corners (src\processing\fast_aligner.py:38) (13 samples, 0.42%)</title><rect x="20.8970%" y="276" width="0.4225%" height="15" fill="rgb(209,38,44)" fg:x="643" fg:w="13"/><text x="21.1470%" y="286.50"></text></g><g><title>extract_corners (src\processing\fast_aligner.py:41) (87 samples, 2.83%)</title><rect x="21.3195%" y="276" width="2.8274%" height="15" fill="rgb(236,212,23)" fg:x="656" fg:w="87"/><text x="21.5695%" y="286.50">ex..</text></g><g><title>extract_corners (src\processing\fast_aligner.py:48) (7 samples, 0.23%)</title><rect x="24.1469%" y="276" width="0.2275%" height="15" fill="rgb(242,79,21)" fg:x="743" fg:w="7"/><text x="24.3969%" y="286.50"></text></g><g><title>extract_corners (src\processing\fast_aligner.py:51) (17 samples, 0.55%)</title><rect x="24.3744%" y="276" width="0.5525%" height="15" fill="rgb(211,96,35)" fg:x="750" fg:w="17"/><text x="24.6244%" y="286.50"></text></g><g><title>extract_corners (src\processing\fast_aligner.py:58) (5 samples, 0.16%)</title><rect x="24.9269%" y="276" width="0.1625%" height="15" fill="rgb(253,215,40)" fg:x="767" fg:w="5"/><text x="25.1769%" y="286.50"></text></g><g><title>zeros_like (&lt;__array_function__ internals&gt;:180) (5 samples, 0.16%)</title><rect x="24.9269%" y="292" width="0.1625%" height="15" fill="rgb(211,81,21)" fg:x="767" fg:w="5"/><text x="25.1769%" y="302.50"></text></g><g><title>zeros_like (numpy\core\numeric.py:141) (5 samples, 0.16%)</title><rect x="24.9269%" y="308" width="0.1625%" height="15" fill="rgb(208,190,38)" fg:x="767" fg:w="5"/><text x="25.1769%" y="318.50"></text></g><g><title>copyto (&lt;__array_function__ internals&gt;:180) (5 samples, 0.16%)</title><rect x="24.9269%" y="324" width="0.1625%" height="15" fill="rgb(235,213,38)" fg:x="767" fg:w="5"/><text x="25.1769%" y="334.50"></text></g><g><title>extract_corners (src\processing\fast_aligner.py:77) (8 samples, 0.26%)</title><rect x="25.1544%" y="276" width="0.2600%" height="15" fill="rgb(237,122,38)" fg:x="774" fg:w="8"/><text x="25.4044%" y="286.50"></text></g><g><title>align (src\processing\fast_aligner.py:178) (158 samples, 5.13%)</title><rect x="20.3445%" y="260" width="5.1349%" height="15" fill="rgb(244,218,35)" fg:x="626" fg:w="158"/><text x="20.5945%" y="270.50">align ..</text></g><g><title>extract_corners (src\processing\fast_aligner.py:38) (8 samples, 0.26%)</title><rect x="25.9344%" y="276" width="0.2600%" height="15" fill="rgb(240,68,47)" fg:x="798" fg:w="8"/><text x="26.1844%" y="286.50"></text></g><g><title>extract_corners (src\processing\fast_aligner.py:41) (95 samples, 3.09%)</title><rect x="26.1943%" y="276" width="3.0874%" height="15" fill="rgb(210,16,53)" fg:x="806" fg:w="95"/><text x="26.4443%" y="286.50">ext..</text></g><g><title>extract_corners (src\processing\fast_aligner.py:48) (10 samples, 0.32%)</title><rect x="29.2818%" y="276" width="0.3250%" height="15" fill="rgb(235,124,12)" fg:x="901" fg:w="10"/><text x="29.5318%" y="286.50"></text></g><g><title>extract_corners (src\processing\fast_aligner.py:51) (20 samples, 0.65%)</title><rect x="29.6068%" y="276" width="0.6500%" height="15" fill="rgb(224,169,11)" fg:x="911" fg:w="20"/><text x="29.8568%" y="286.50"></text></g><g><title>extract_corners (src\processing\fast_aligner.py:58) (7 samples, 0.23%)</title><rect x="30.2567%" y="276" width="0.2275%" height="15" fill="rgb(250,166,2)" fg:x="931" fg:w="7"/><text x="30.5067%" y="286.50"></text></g><g><title>zeros_like (&lt;__array_function__ internals&gt;:180) (7 samples, 0.23%)</title><rect x="30.2567%" y="292" width="0.2275%" height="15" fill="rgb(242,216,29)" fg:x="931" fg:w="7"/><text x="30.5067%" y="302.50"></text></g><g><title>zeros_like (numpy\core\numeric.py:141) (7 samples, 0.23%)</title><rect x="30.2567%" y="308" width="0.2275%" height="15" fill="rgb(230,116,27)" fg:x="931" fg:w="7"/><text x="30.5067%" y="318.50"></text></g><g><title>copyto (&lt;__array_function__ internals&gt;:180) (7 samples, 0.23%)</title><rect x="30.2567%" y="324" width="0.2275%" height="15" fill="rgb(228,99,48)" fg:x="931" fg:w="7"/><text x="30.5067%" y="334.50"></text></g><g><title>extract_corners (src\processing\fast_aligner.py:77) (10 samples, 0.32%)</title><rect x="30.5167%" y="276" width="0.3250%" height="15" fill="rgb(253,11,6)" fg:x="939" fg:w="10"/><text x="30.7667%" y="286.50"></text></g><g><title>align (src\processing\fast_aligner.py:179) (170 samples, 5.52%)</title><rect x="25.4794%" y="260" width="5.5249%" height="15" fill="rgb(247,143,39)" fg:x="784" fg:w="170"/><text x="25.7294%" y="270.50">align (..</text></g><g><title>extract_corners (src\processing\fast_aligner.py:79) (5 samples, 0.16%)</title><rect x="30.8417%" y="276" width="0.1625%" height="15" fill="rgb(236,97,10)" fg:x="949" fg:w="5"/><text x="31.0917%" y="286.50"></text></g><g><title>align (src\processing\fast_aligner.py:184) (4 samples, 0.13%)</title><rect x="31.0042%" y="260" width="0.1300%" height="15" fill="rgb(233,208,19)" fg:x="954" fg:w="4"/><text x="31.2542%" y="270.50"></text></g><g><title>process_image (src\processing\image_processor.py:167) (361 samples, 11.73%)</title><rect x="20.2145%" y="244" width="11.7322%" height="15" fill="rgb(216,164,2)" fg:x="622" fg:w="361"/><text x="20.4645%" y="254.50">process_image (sr..</text></g><g><title>align (src\processing\fast_aligner.py:212) (23 samples, 0.75%)</title><rect x="31.1992%" y="260" width="0.7475%" height="15" fill="rgb(220,129,5)" fg:x="960" fg:w="23"/><text x="31.4492%" y="270.50"></text></g><g><title>remove_pink_marks (src\processing\image_processor.py:628) (12 samples, 0.39%)</title><rect x="32.4342%" y="260" width="0.3900%" height="15" fill="rgb(242,17,10)" fg:x="998" fg:w="12"/><text x="32.6842%" y="270.50"></text></g><g><title>remove_pink_marks (src\processing\image_processor.py:629) (19 samples, 0.62%)</title><rect x="32.8242%" y="260" width="0.6175%" height="15" fill="rgb(242,107,0)" fg:x="1010" fg:w="19"/><text x="33.0742%" y="270.50"></text></g><g><title>remove_pink_marks (src\processing\image_processor.py:631) (10 samples, 0.32%)</title><rect x="33.4417%" y="260" width="0.3250%" height="15" fill="rgb(251,28,31)" fg:x="1029" fg:w="10"/><text x="33.6917%" y="270.50"></text></g><g><title>remove_pink_marks (src\processing\image_processor.py:635) (7 samples, 0.23%)</title><rect x="33.7667%" y="260" width="0.2275%" height="15" fill="rgb(233,223,10)" fg:x="1039" fg:w="7"/><text x="34.0167%" y="270.50"></text></g><g><title>remove_pink_marks (src\processing\image_processor.py:638) (25 samples, 0.81%)</title><rect x="33.9942%" y="260" width="0.8125%" height="15" fill="rgb(215,21,27)" fg:x="1046" fg:w="25"/><text x="34.2442%" y="270.50"></text></g><g><title>remove_pink_marks (src\processing\image_processor.py:641) (61 samples, 1.98%)</title><rect x="34.8066%" y="260" width="1.9825%" height="15" fill="rgb(232,23,21)" fg:x="1071" fg:w="61"/><text x="35.0566%" y="270.50">r..</text></g><g><title>ones_like (&lt;__array_function__ internals&gt;:180) (21 samples, 0.68%)</title><rect x="36.1066%" y="276" width="0.6825%" height="15" fill="rgb(244,5,23)" fg:x="1111" fg:w="21"/><text x="36.3566%" y="286.50"></text></g><g><title>ones_like (numpy\core\numeric.py:281) (21 samples, 0.68%)</title><rect x="36.1066%" y="292" width="0.6825%" height="15" fill="rgb(226,81,46)" fg:x="1111" fg:w="21"/><text x="36.3566%" y="302.50"></text></g><g><title>copyto (&lt;__array_function__ internals&gt;:180) (21 samples, 0.68%)</title><rect x="36.1066%" y="308" width="0.6825%" height="15" fill="rgb(247,70,30)" fg:x="1111" fg:w="21"/><text x="36.3566%" y="318.50"></text></g><g><title>remove_pink_marks (src\processing\image_processor.py:642) (20 samples, 0.65%)</title><rect x="36.7891%" y="260" width="0.6500%" height="15" fill="rgb(212,68,19)" fg:x="1132" fg:w="20"/><text x="37.0391%" y="270.50"></text></g><g><title>process_image (src\processing\image_processor.py:189) (218 samples, 7.08%)</title><rect x="31.9467%" y="244" width="7.0848%" height="15" fill="rgb(240,187,13)" fg:x="983" fg:w="218"/><text x="32.1967%" y="254.50">process_im..</text></g><g><title>remove_pink_marks (src\processing\image_processor.py:644) (49 samples, 1.59%)</title><rect x="37.4391%" y="260" width="1.5925%" height="15" fill="rgb(223,113,26)" fg:x="1152" fg:w="49"/><text x="37.6891%" y="270.50"></text></g><g><title>remove_pink_marks (src\processing\image_processor.py:620) (10 samples, 0.32%)</title><rect x="39.2915%" y="292" width="0.3250%" height="15" fill="rgb(206,192,2)" fg:x="1209" fg:w="10"/><text x="39.5415%" y="302.50"></text></g><g><title>remove_pink_marks (src\processing\image_processor.py:623) (5 samples, 0.16%)</title><rect x="39.6490%" y="292" width="0.1625%" height="15" fill="rgb(241,108,4)" fg:x="1220" fg:w="5"/><text x="39.8990%" y="302.50"></text></g><g><title>remove_pink_marks (src\processing\image_processor.py:628) (9 samples, 0.29%)</title><rect x="39.9415%" y="292" width="0.2925%" height="15" fill="rgb(247,173,49)" fg:x="1229" fg:w="9"/><text x="40.1915%" y="302.50"></text></g><g><title>remove_pink_marks (src\processing\image_processor.py:629) (10 samples, 0.32%)</title><rect x="40.2340%" y="292" width="0.3250%" height="15" fill="rgb(224,114,35)" fg:x="1238" fg:w="10"/><text x="40.4840%" y="302.50"></text></g><g><title>remove_pink_marks (src\processing\image_processor.py:638) (15 samples, 0.49%)</title><rect x="40.6240%" y="292" width="0.4875%" height="15" fill="rgb(245,159,27)" fg:x="1250" fg:w="15"/><text x="40.8740%" y="302.50"></text></g><g><title>remove_pink_marks (src\processing\image_processor.py:641) (16 samples, 0.52%)</title><rect x="41.1115%" y="292" width="0.5200%" height="15" fill="rgb(245,172,44)" fg:x="1265" fg:w="16"/><text x="41.3615%" y="302.50"></text></g><g><title>ones_like (&lt;__array_function__ internals&gt;:180) (4 samples, 0.13%)</title><rect x="41.5015%" y="308" width="0.1300%" height="15" fill="rgb(236,23,11)" fg:x="1277" fg:w="4"/><text x="41.7515%" y="318.50"></text></g><g><title>ones_like (numpy\core\numeric.py:280) (4 samples, 0.13%)</title><rect x="41.5015%" y="324" width="0.1300%" height="15" fill="rgb(205,117,38)" fg:x="1277" fg:w="4"/><text x="41.7515%" y="334.50"></text></g><g><title>process_omr (src\processing\image_processor.py:377) (83 samples, 2.70%)</title><rect x="39.2915%" y="276" width="2.6974%" height="15" fill="rgb(237,72,25)" fg:x="1209" fg:w="83"/><text x="39.5415%" y="286.50">pr..</text></g><g><title>remove_pink_marks (src\processing\image_processor.py:644) (10 samples, 0.32%)</title><rect x="41.6640%" y="292" width="0.3250%" height="15" fill="rgb(244,70,9)" fg:x="1282" fg:w="10"/><text x="41.9140%" y="302.50"></text></g><g><title>process_omr (src\processing\image_processor.py:378) (4 samples, 0.13%)</title><rect x="41.9890%" y="276" width="0.1300%" height="15" fill="rgb(217,125,39)" fg:x="1292" fg:w="4"/><text x="42.2390%" y="286.50"></text></g><g><title>_mean (numpy\core\_methods.py:168) (5 samples, 0.16%)</title><rect x="42.2164%" y="324" width="0.1625%" height="15" fill="rgb(235,36,10)" fg:x="1299" fg:w="5"/><text x="42.4664%" y="334.50"></text></g><g><title>_mean (numpy\core\_methods.py:180) (11 samples, 0.36%)</title><rect x="42.4114%" y="324" width="0.3575%" height="15" fill="rgb(251,123,47)" fg:x="1305" fg:w="11"/><text x="42.6614%" y="334.50"></text></g><g><title>process_omr (src\processing\image_processor.py:383) (21 samples, 0.68%)</title><rect x="42.1189%" y="276" width="0.6825%" height="15" fill="rgb(221,13,13)" fg:x="1296" fg:w="21"/><text x="42.3689%" y="286.50"></text></g><g><title>mean (&lt;__array_function__ internals&gt;:180) (20 samples, 0.65%)</title><rect x="42.1514%" y="292" width="0.6500%" height="15" fill="rgb(238,131,9)" fg:x="1297" fg:w="20"/><text x="42.4014%" y="302.50"></text></g><g><title>mean (numpy\core\fromnumeric.py:3432) (19 samples, 0.62%)</title><rect x="42.1839%" y="308" width="0.6175%" height="15" fill="rgb(211,50,8)" fg:x="1298" fg:w="19"/><text x="42.4339%" y="318.50"></text></g><g><title>process_image (src\processing\image_processor.py:214) (116 samples, 3.77%)</title><rect x="39.0640%" y="244" width="3.7699%" height="15" fill="rgb(245,182,24)" fg:x="1202" fg:w="116"/><text x="39.3140%" y="254.50">proc..</text></g><g><title>process_fields (src\processing\image_processor.py:255) (111 samples, 3.61%)</title><rect x="39.2265%" y="260" width="3.6074%" height="15" fill="rgb(242,14,37)" fg:x="1207" fg:w="111"/><text x="39.4765%" y="270.50">proc..</text></g><g><title>_process_image_with_reference (src\processing\batch_processor.py:448) (1,488 samples, 48.36%)</title><rect x="1.1375%" y="228" width="48.3588%" height="15" fill="rgb(246,228,12)" fg:x="35" fg:w="1488"/><text x="1.3875%" y="238.50">_process_image_with_reference (src\processing\batch_processor.py:448)</text></g><g><title>process_image (src\processing\image_processor.py:82) (205 samples, 6.66%)</title><rect x="42.8339%" y="244" width="6.6623%" height="15" fill="rgb(213,55,15)" fg:x="1318" fg:w="205"/><text x="43.0839%" y="254.50">process_i..</text></g><g><title>process_single_image (src\processing\batch_processor.py:323) (1,493 samples, 48.52%)</title><rect x="1.0400%" y="196" width="48.5213%" height="15" fill="rgb(209,9,3)" fg:x="32" fg:w="1493"/><text x="1.2900%" y="206.50">process_single_image (src\processing\batch_processor.py:323)</text></g><g><title>_handle_image_with_barcode (src\processing\batch_processor.py:396) (1,490 samples, 48.42%)</title><rect x="1.1375%" y="212" width="48.4238%" height="15" fill="rgb(230,59,30)" fg:x="35" fg:w="1490"/><text x="1.3875%" y="222.50">_handle_image_with_barcode (src\processing\batch_processor.py:396)</text></g><g><title>process_image (src\processing\image_processor.py:102) (469 samples, 15.24%)</title><rect x="50.0487%" y="244" width="15.2421%" height="15" fill="rgb(209,121,21)" fg:x="1540" fg:w="469"/><text x="50.2987%" y="254.50">process_image (src\proc..</text></g><g><title>read_barcode (src\processing\image_processor.py:342) (469 samples, 15.24%)</title><rect x="50.0487%" y="260" width="15.2421%" height="15" fill="rgb(220,109,13)" fg:x="1540" fg:w="469"/><text x="50.2987%" y="270.50">read_barcode (src\proce..</text></g><g><title>process_image (src\processing\image_processor.py:133) (4 samples, 0.13%)</title><rect x="65.2909%" y="244" width="0.1300%" height="15" fill="rgb(232,18,1)" fg:x="2009" fg:w="4"/><text x="65.5409%" y="254.50"></text></g><g><title>exists (pathlib.py:1290) (4 samples, 0.13%)</title><rect x="65.2909%" y="260" width="0.1300%" height="15" fill="rgb(215,41,42)" fg:x="2009" fg:w="4"/><text x="65.5409%" y="270.50"></text></g><g><title>stat (pathlib.py:1097) (4 samples, 0.13%)</title><rect x="65.2909%" y="276" width="0.1300%" height="15" fill="rgb(224,123,36)" fg:x="2009" fg:w="4"/><text x="65.5409%" y="286.50"></text></g><g><title>process_image (src\processing\image_processor.py:134) (69 samples, 2.24%)</title><rect x="65.4209%" y="244" width="2.2424%" height="15" fill="rgb(240,125,3)" fg:x="2013" fg:w="69"/><text x="65.6709%" y="254.50">p..</text></g><g><title>_get_reference_template (src\processing\image_processor.py:282) (69 samples, 2.24%)</title><rect x="65.4209%" y="260" width="2.2424%" height="15" fill="rgb(205,98,50)" fg:x="2013" fg:w="69"/><text x="65.6709%" y="270.50">_..</text></g><g><title>extract_corners (src\processing\fast_aligner.py:38) (10 samples, 0.32%)</title><rect x="68.1833%" y="276" width="0.3250%" height="15" fill="rgb(205,185,37)" fg:x="2098" fg:w="10"/><text x="68.4333%" y="286.50"></text></g><g><title>extract_corners (src\processing\fast_aligner.py:41) (101 samples, 3.28%)</title><rect x="68.5083%" y="276" width="3.2824%" height="15" fill="rgb(238,207,15)" fg:x="2108" fg:w="101"/><text x="68.7583%" y="286.50">ext..</text></g><g><title>extract_corners (src\processing\fast_aligner.py:48) (8 samples, 0.26%)</title><rect x="71.7907%" y="276" width="0.2600%" height="15" fill="rgb(213,199,42)" fg:x="2209" fg:w="8"/><text x="72.0407%" y="286.50"></text></g><g><title>extract_corners (src\processing\fast_aligner.py:51) (17 samples, 0.55%)</title><rect x="72.0507%" y="276" width="0.5525%" height="15" fill="rgb(235,201,11)" fg:x="2217" fg:w="17"/><text x="72.3007%" y="286.50"></text></g><g><title>extract_corners (src\processing\fast_aligner.py:77) (12 samples, 0.39%)</title><rect x="72.6682%" y="276" width="0.3900%" height="15" fill="rgb(207,46,11)" fg:x="2236" fg:w="12"/><text x="72.9182%" y="286.50"></text></g><g><title>align (src\processing\fast_aligner.py:178) (162 samples, 5.26%)</title><rect x="67.8258%" y="260" width="5.2649%" height="15" fill="rgb(241,35,35)" fg:x="2087" fg:w="162"/><text x="68.0758%" y="270.50">align ..</text></g><g><title>extract_corners (src\processing\fast_aligner.py:29) (4 samples, 0.13%)</title><rect x="73.4482%" y="276" width="0.1300%" height="15" fill="rgb(243,32,47)" fg:x="2260" fg:w="4"/><text x="73.6982%" y="286.50"></text></g><g><title>extract_corners (src\processing\fast_aligner.py:34) (5 samples, 0.16%)</title><rect x="73.5782%" y="276" width="0.1625%" height="15" fill="rgb(247,202,23)" fg:x="2264" fg:w="5"/><text x="73.8282%" y="286.50"></text></g><g><title>extract_corners (src\processing\fast_aligner.py:38) (10 samples, 0.32%)</title><rect x="73.7407%" y="276" width="0.3250%" height="15" fill="rgb(219,102,11)" fg:x="2269" fg:w="10"/><text x="73.9907%" y="286.50"></text></g><g><title>extract_corners (src\processing\fast_aligner.py:41) (98 samples, 3.18%)</title><rect x="74.0656%" y="276" width="3.1849%" height="15" fill="rgb(243,110,44)" fg:x="2279" fg:w="98"/><text x="74.3156%" y="286.50">ext..</text></g><g><title>extract_corners (src\processing\fast_aligner.py:48) (9 samples, 0.29%)</title><rect x="77.2506%" y="276" width="0.2925%" height="15" fill="rgb(222,74,54)" fg:x="2377" fg:w="9"/><text x="77.5006%" y="286.50"></text></g><g><title>extract_corners (src\processing\fast_aligner.py:51) (24 samples, 0.78%)</title><rect x="77.5431%" y="276" width="0.7800%" height="15" fill="rgb(216,99,12)" fg:x="2386" fg:w="24"/><text x="77.7931%" y="286.50"></text></g><g><title>extract_corners (src\processing\fast_aligner.py:58) (6 samples, 0.19%)</title><rect x="78.3230%" y="276" width="0.1950%" height="15" fill="rgb(226,22,26)" fg:x="2410" fg:w="6"/><text x="78.5730%" y="286.50"></text></g><g><title>zeros_like (&lt;__array_function__ internals&gt;:180) (6 samples, 0.19%)</title><rect x="78.3230%" y="292" width="0.1950%" height="15" fill="rgb(217,163,10)" fg:x="2410" fg:w="6"/><text x="78.5730%" y="302.50"></text></g><g><title>zeros_like (numpy\core\numeric.py:141) (6 samples, 0.19%)</title><rect x="78.3230%" y="308" width="0.1950%" height="15" fill="rgb(213,25,53)" fg:x="2410" fg:w="6"/><text x="78.5730%" y="318.50"></text></g><g><title>copyto (&lt;__array_function__ internals&gt;:180) (6 samples, 0.19%)</title><rect x="78.3230%" y="324" width="0.1950%" height="15" fill="rgb(252,105,26)" fg:x="2410" fg:w="6"/><text x="78.5730%" y="334.50"></text></g><g><title>align (src\processing\fast_aligner.py:179) (180 samples, 5.85%)</title><rect x="73.0907%" y="260" width="5.8499%" height="15" fill="rgb(220,39,43)" fg:x="2249" fg:w="180"/><text x="73.3407%" y="270.50">align (..</text></g><g><title>extract_corners (src\processing\fast_aligner.py:77) (13 samples, 0.42%)</title><rect x="78.5180%" y="276" width="0.4225%" height="15" fill="rgb(229,68,48)" fg:x="2416" fg:w="13"/><text x="78.7680%" y="286.50"></text></g><g><title>process_image (src\processing\image_processor.py:167) (375 samples, 12.19%)</title><rect x="67.6633%" y="244" width="12.1872%" height="15" fill="rgb(252,8,32)" fg:x="2082" fg:w="375"/><text x="67.9133%" y="254.50">process_image (src..</text></g><g><title>align (src\processing\fast_aligner.py:212) (26 samples, 0.84%)</title><rect x="79.0055%" y="260" width="0.8450%" height="15" fill="rgb(223,20,43)" fg:x="2431" fg:w="26"/><text x="79.2555%" y="270.50"></text></g><g><title>remove_pink_marks (src\processing\image_processor.py:628) (17 samples, 0.55%)</title><rect x="80.4355%" y="260" width="0.5525%" height="15" fill="rgb(229,81,49)" fg:x="2475" fg:w="17"/><text x="80.6855%" y="270.50"></text></g><g><title>remove_pink_marks (src\processing\image_processor.py:629) (29 samples, 0.94%)</title><rect x="80.9880%" y="260" width="0.9425%" height="15" fill="rgb(236,28,36)" fg:x="2492" fg:w="29"/><text x="81.2380%" y="270.50"></text></g><g><title>remove_pink_marks (src\processing\image_processor.py:631) (10 samples, 0.32%)</title><rect x="81.9305%" y="260" width="0.3250%" height="15" fill="rgb(249,185,26)" fg:x="2521" fg:w="10"/><text x="82.1805%" y="270.50"></text></g><g><title>remove_pink_marks (src\processing\image_processor.py:635) (10 samples, 0.32%)</title><rect x="82.2554%" y="260" width="0.3250%" height="15" fill="rgb(249,174,33)" fg:x="2531" fg:w="10"/><text x="82.5054%" y="270.50"></text></g><g><title>remove_pink_marks (src\processing\image_processor.py:638) (31 samples, 1.01%)</title><rect x="82.5804%" y="260" width="1.0075%" height="15" fill="rgb(233,201,37)" fg:x="2541" fg:w="31"/><text x="82.8304%" y="270.50"></text></g><g><title>remove_pink_marks (src\processing\image_processor.py:641) (50 samples, 1.62%)</title><rect x="83.5879%" y="260" width="1.6250%" height="15" fill="rgb(221,78,26)" fg:x="2572" fg:w="50"/><text x="83.8379%" y="270.50"></text></g><g><title>ones_like (&lt;__array_function__ internals&gt;:180) (15 samples, 0.49%)</title><rect x="84.7254%" y="276" width="0.4875%" height="15" fill="rgb(250,127,30)" fg:x="2607" fg:w="15"/><text x="84.9754%" y="286.50"></text></g><g><title>ones_like (numpy\core\numeric.py:281) (15 samples, 0.49%)</title><rect x="84.7254%" y="292" width="0.4875%" height="15" fill="rgb(230,49,44)" fg:x="2607" fg:w="15"/><text x="84.9754%" y="302.50"></text></g><g><title>copyto (&lt;__array_function__ internals&gt;:180) (15 samples, 0.49%)</title><rect x="84.7254%" y="308" width="0.4875%" height="15" fill="rgb(229,67,23)" fg:x="2607" fg:w="15"/><text x="84.9754%" y="318.50"></text></g><g><title>remove_pink_marks (src\processing\image_processor.py:642) (23 samples, 0.75%)</title><rect x="85.2129%" y="260" width="0.7475%" height="15" fill="rgb(249,83,47)" fg:x="2622" fg:w="23"/><text x="85.4629%" y="270.50"></text></g><g><title>process_image (src\processing\image_processor.py:189) (219 samples, 7.12%)</title><rect x="79.8505%" y="244" width="7.1173%" height="15" fill="rgb(215,43,3)" fg:x="2457" fg:w="219"/><text x="80.1005%" y="254.50">process_im..</text></g><g><title>remove_pink_marks (src\processing\image_processor.py:644) (31 samples, 1.01%)</title><rect x="85.9604%" y="260" width="1.0075%" height="15" fill="rgb(238,154,13)" fg:x="2645" fg:w="31"/><text x="86.2104%" y="270.50"></text></g><g><title>process_omr (src\processing\image_processor.py:367) (4 samples, 0.13%)</title><rect x="87.0328%" y="276" width="0.1300%" height="15" fill="rgb(219,56,2)" fg:x="2678" fg:w="4"/><text x="87.2828%" y="286.50"></text></g><g><title>remove_pink_marks (src\processing\image_processor.py:620) (11 samples, 0.36%)</title><rect x="87.2278%" y="292" width="0.3575%" height="15" fill="rgb(233,0,4)" fg:x="2684" fg:w="11"/><text x="87.4778%" y="302.50"></text></g><g><title>remove_pink_marks (src\processing\image_processor.py:628) (5 samples, 0.16%)</title><rect x="87.6503%" y="292" width="0.1625%" height="15" fill="rgb(235,30,7)" fg:x="2697" fg:w="5"/><text x="87.9003%" y="302.50"></text></g><g><title>remove_pink_marks (src\processing\image_processor.py:629) (6 samples, 0.19%)</title><rect x="87.8128%" y="292" width="0.1950%" height="15" fill="rgb(250,79,13)" fg:x="2702" fg:w="6"/><text x="88.0628%" y="302.50"></text></g><g><title>remove_pink_marks (src\processing\image_processor.py:638) (15 samples, 0.49%)</title><rect x="88.0728%" y="292" width="0.4875%" height="15" fill="rgb(211,146,34)" fg:x="2710" fg:w="15"/><text x="88.3228%" y="302.50"></text></g><g><title>remove_pink_marks (src\processing\image_processor.py:641) (14 samples, 0.45%)</title><rect x="88.5603%" y="292" width="0.4550%" height="15" fill="rgb(228,22,38)" fg:x="2725" fg:w="14"/><text x="88.8103%" y="302.50"></text></g><g><title>ones_like (&lt;__array_function__ internals&gt;:180) (5 samples, 0.16%)</title><rect x="88.8528%" y="308" width="0.1625%" height="15" fill="rgb(235,168,5)" fg:x="2734" fg:w="5"/><text x="89.1028%" y="318.50"></text></g><g><title>remove_pink_marks (src\processing\image_processor.py:642) (5 samples, 0.16%)</title><rect x="89.0153%" y="292" width="0.1625%" height="15" fill="rgb(221,155,16)" fg:x="2739" fg:w="5"/><text x="89.2653%" y="302.50"></text></g><g><title>process_omr (src\processing\image_processor.py:377) (70 samples, 2.27%)</title><rect x="87.2278%" y="276" width="2.2749%" height="15" fill="rgb(215,215,53)" fg:x="2684" fg:w="70"/><text x="87.4778%" y="286.50">p..</text></g><g><title>remove_pink_marks (src\processing\image_processor.py:644) (10 samples, 0.32%)</title><rect x="89.1778%" y="292" width="0.3250%" height="15" fill="rgb(223,4,10)" fg:x="2744" fg:w="10"/><text x="89.4278%" y="302.50"></text></g><g><title>process_omr (src\processing\image_processor.py:378) (6 samples, 0.19%)</title><rect x="89.5028%" y="276" width="0.1950%" height="15" fill="rgb(234,103,6)" fg:x="2754" fg:w="6"/><text x="89.7528%" y="286.50"></text></g><g><title>_mean (numpy\core\_methods.py:180) (8 samples, 0.26%)</title><rect x="89.9578%" y="324" width="0.2600%" height="15" fill="rgb(227,97,0)" fg:x="2768" fg:w="8"/><text x="90.2078%" y="334.50"></text></g><g><title>process_omr (src\processing\image_processor.py:383) (18 samples, 0.58%)</title><rect x="89.6978%" y="276" width="0.5850%" height="15" fill="rgb(234,150,53)" fg:x="2760" fg:w="18"/><text x="89.9478%" y="286.50"></text></g><g><title>mean (&lt;__array_function__ internals&gt;:180) (18 samples, 0.58%)</title><rect x="89.6978%" y="292" width="0.5850%" height="15" fill="rgb(228,201,54)" fg:x="2760" fg:w="18"/><text x="89.9478%" y="302.50"></text></g><g><title>mean (numpy\core\fromnumeric.py:3432) (17 samples, 0.55%)</title><rect x="89.7303%" y="308" width="0.5525%" height="15" fill="rgb(222,22,37)" fg:x="2761" fg:w="17"/><text x="89.9803%" y="318.50"></text></g><g><title>process_image (src\processing\image_processor.py:214) (102 samples, 3.31%)</title><rect x="87.0003%" y="244" width="3.3149%" height="15" fill="rgb(237,53,32)" fg:x="2677" fg:w="102"/><text x="87.2503%" y="254.50">pro..</text></g><g><title>process_fields (src\processing\image_processor.py:255) (101 samples, 3.28%)</title><rect x="87.0328%" y="260" width="3.2824%" height="15" fill="rgb(233,25,53)" fg:x="2678" fg:w="101"/><text x="87.2828%" y="270.50">pro..</text></g><g><title>_process_image_with_reference (src\processing\batch_processor.py:448) (1,442 samples, 46.86%)</title><rect x="49.5613%" y="228" width="46.8638%" height="15" fill="rgb(210,40,34)" fg:x="1525" fg:w="1442"/><text x="49.8113%" y="238.50">_process_image_with_reference (src\processing\batch_processor.py:448)</text></g><g><title>process_image (src\processing\image_processor.py:82) (188 samples, 6.11%)</title><rect x="90.3152%" y="244" width="6.1098%" height="15" fill="rgb(241,220,44)" fg:x="2779" fg:w="188"/><text x="90.5652%" y="254.50">process_..</text></g><g><title>run (src\processing\batch_processor.py:234) (2,941 samples, 95.58%)</title><rect x="0.9750%" y="180" width="95.5801%" height="15" fill="rgb(235,28,35)" fg:x="30" fg:w="2941"/><text x="1.2250%" y="190.50">run (src\processing\batch_processor.py:234)</text></g><g><title>process_single_image (src\processing\batch_processor.py:325) (1,446 samples, 46.99%)</title><rect x="49.5613%" y="196" width="46.9938%" height="15" fill="rgb(210,56,17)" fg:x="1525" fg:w="1446"/><text x="49.8113%" y="206.50">process_single_image (src\processing\batch_processor.py:325)</text></g><g><title>_handle_image_without_barcode (src\processing\batch_processor.py:421) (1,446 samples, 46.99%)</title><rect x="49.5613%" y="212" width="46.9938%" height="15" fill="rgb(224,130,29)" fg:x="1525" fg:w="1446"/><text x="49.8113%" y="222.50">_handle_image_without_barcode (src\processing\batch_processor.py:421)</text></g><g><title>process_batch (src\ui\cli_controller.py:211) (2,943 samples, 95.65%)</title><rect x="0.9750%" y="148" width="95.6451%" height="15" fill="rgb(235,212,8)" fg:x="30" fg:w="2943"/><text x="1.2250%" y="158.50">process_batch (src\ui\cli_controller.py:211)</text></g><g><title>_process_exam (src\ui\cli_controller.py:383) (2,943 samples, 95.65%)</title><rect x="0.9750%" y="164" width="95.6451%" height="15" fill="rgb(223,33,50)" fg:x="30" fg:w="2943"/><text x="1.2250%" y="174.50">_process_exam (src\ui\cli_controller.py:383)</text></g><g><title>process_batch (src\ui\cli_controller.py:230) (5 samples, 0.16%)</title><rect x="96.6201%" y="148" width="0.1625%" height="15" fill="rgb(219,149,13)" fg:x="2973" fg:w="5"/><text x="96.8701%" y="158.50"></text></g><g><title>run (src\main.py:258) (2,954 samples, 96.00%)</title><rect x="0.8775%" y="100" width="96.0026%" height="15" fill="rgb(250,156,29)" fg:x="27" fg:w="2954"/><text x="1.1275%" y="110.50">run (src\main.py:258)</text></g><g><title>run (src\ui\cli_controller.py:57) (2,954 samples, 96.00%)</title><rect x="0.8775%" y="116" width="96.0026%" height="15" fill="rgb(216,193,19)" fg:x="27" fg:w="2954"/><text x="1.1275%" y="126.50">run (src\ui\cli_controller.py:57)</text></g><g><title>process_all_batches (src\ui\cli_controller.py:140) (2,954 samples, 96.00%)</title><rect x="0.8775%" y="132" width="96.0026%" height="15" fill="rgb(216,135,14)" fg:x="27" fg:w="2954"/><text x="1.1275%" y="142.50">process_all_batches (src\ui\cli_controller.py:140)</text></g><g><title>&lt;module&gt; (src\main.py:288) (2,962 samples, 96.26%)</title><rect x="0.6500%" y="68" width="96.2626%" height="15" fill="rgb(241,47,5)" fg:x="20" fg:w="2962"/><text x="0.9000%" y="78.50">&lt;module&gt; (src\main.py:288)</text></g><g><title>main (src\main.py:277) (2,962 samples, 96.26%)</title><rect x="0.6500%" y="84" width="96.2626%" height="15" fill="rgb(233,42,35)" fg:x="20" fg:w="2962"/><text x="0.9000%" y="94.50">main (src\main.py:277)</text></g><g><title>&lt;genexpr&gt; (rich\progress.py:1570) (6 samples, 0.19%)</title><rect x="97.0751%" y="212" width="0.1950%" height="15" fill="rgb(231,13,6)" fg:x="2987" fg:w="6"/><text x="97.3251%" y="222.50"></text></g><g><title>copy (rich\table.py:119) (6 samples, 0.19%)</title><rect x="97.0751%" y="228" width="0.1950%" height="15" fill="rgb(207,181,40)" fg:x="2987" fg:w="6"/><text x="97.3251%" y="238.50"></text></g><g><title>make_tasks_table (rich\progress.py:1578) (11 samples, 0.36%)</title><rect x="97.0426%" y="196" width="0.3575%" height="15" fill="rgb(254,173,49)" fg:x="2986" fg:w="11"/><text x="97.2926%" y="206.50"></text></g><g><title>grid (rich\table.py:274) (4 samples, 0.13%)</title><rect x="97.2701%" y="212" width="0.1300%" height="15" fill="rgb(221,1,38)" fg:x="2993" fg:w="4"/><text x="97.5201%" y="222.50"></text></g><g><title>__call__ (rich\progress.py:542) (10 samples, 0.32%)</title><rect x="97.4326%" y="228" width="0.3250%" height="15" fill="rgb(206,124,46)" fg:x="2998" fg:w="10"/><text x="97.6826%" y="238.50"></text></g><g><title>&lt;genexpr&gt; (rich\progress.py:1583) (12 samples, 0.39%)</title><rect x="97.4001%" y="212" width="0.3900%" height="15" fill="rgb(249,21,11)" fg:x="2997" fg:w="12"/><text x="97.6501%" y="222.50"></text></g><g><title>refresh (rich\live.py:223) (30 samples, 0.97%)</title><rect x="96.9451%" y="116" width="0.9750%" height="15" fill="rgb(222,201,40)" fg:x="2983" fg:w="30"/><text x="97.1951%" y="126.50"></text></g><g><title>renderable (rich\live.py:203) (30 samples, 0.97%)</title><rect x="96.9451%" y="132" width="0.9750%" height="15" fill="rgb(235,61,29)" fg:x="2983" fg:w="30"/><text x="97.1951%" y="142.50"></text></g><g><title>get_renderable (rich\live.py:98) (30 samples, 0.97%)</title><rect x="96.9451%" y="148" width="0.9750%" height="15" fill="rgb(219,207,3)" fg:x="2983" fg:w="30"/><text x="97.1951%" y="158.50"></text></g><g><title>get_renderable (rich\progress.py:1553) (30 samples, 0.97%)</title><rect x="96.9451%" y="164" width="0.9750%" height="15" fill="rgb(222,56,46)" fg:x="2983" fg:w="30"/><text x="97.1951%" y="174.50"></text></g><g><title>get_renderables (rich\progress.py:1558) (28 samples, 0.91%)</title><rect x="97.0101%" y="180" width="0.9100%" height="15" fill="rgb(239,76,54)" fg:x="2985" fg:w="28"/><text x="97.2601%" y="190.50"></text></g><g><title>make_tasks_table (rich\progress.py:1582) (16 samples, 0.52%)</title><rect x="97.4001%" y="196" width="0.5200%" height="15" fill="rgb(231,124,27)" fg:x="2997" fg:w="16"/><text x="97.6501%" y="206.50"></text></g><g><title>&lt;genexpr&gt; (rich\progress.py:1585) (4 samples, 0.13%)</title><rect x="97.7901%" y="212" width="0.1300%" height="15" fill="rgb(249,195,6)" fg:x="3009" fg:w="4"/><text x="98.0401%" y="222.50"></text></g><g><title>refresh (rich\live.py:241) (4 samples, 0.13%)</title><rect x="98.0175%" y="116" width="0.1300%" height="15" fill="rgb(237,174,47)" fg:x="3016" fg:w="4"/><text x="98.2675%" y="126.50"></text></g><g><title>__exit__ (rich\console.py:866) (4 samples, 0.13%)</title><rect x="98.0175%" y="132" width="0.1300%" height="15" fill="rgb(206,201,31)" fg:x="3016" fg:w="4"/><text x="98.2675%" y="142.50"></text></g><g><title>_exit_buffer (rich\console.py:824) (4 samples, 0.13%)</title><rect x="98.0175%" y="148" width="0.1300%" height="15" fill="rgb(231,57,52)" fg:x="3016" fg:w="4"/><text x="98.2675%" y="158.50"></text></g><g><title>_check_buffer (rich\console.py:2033) (4 samples, 0.13%)</title><rect x="98.0175%" y="164" width="0.1300%" height="15" fill="rgb(248,177,22)" fg:x="3016" fg:w="4"/><text x="98.2675%" y="174.50"></text></g><g><title>print (rich\console.py:1704) (4 samples, 0.13%)</title><rect x="98.2775%" y="132" width="0.1300%" height="15" fill="rgb(215,211,37)" fg:x="3024" fg:w="4"/><text x="98.5275%" y="142.50"></text></g><g><title>__rich_measure__ (rich\padding.py:132) (8 samples, 0.26%)</title><rect x="98.7325%" y="324" width="0.2600%" height="15" fill="rgb(241,128,51)" fg:x="3038" fg:w="8"/><text x="98.9825%" y="334.50"></text></g><g><title>get (rich\measure.py:99) (4 samples, 0.13%)</title><rect x="98.8625%" y="340" width="0.1300%" height="15" fill="rgb(227,165,31)" fg:x="3042" fg:w="4"/><text x="99.1125%" y="350.50"></text></g><g><title>render_str (rich\console.py:1443) (4 samples, 0.13%)</title><rect x="98.8625%" y="356" width="0.1300%" height="15" fill="rgb(228,167,24)" fg:x="3042" fg:w="4"/><text x="99.1125%" y="366.50"></text></g><g><title>get (rich\measure.py:109) (9 samples, 0.29%)</title><rect x="98.7325%" y="308" width="0.2925%" height="15" fill="rgb(228,143,12)" fg:x="3038" fg:w="9"/><text x="98.9825%" y="318.50"></text></g><g><title>_measure_column (rich\table.py:733) (12 samples, 0.39%)</title><rect x="98.6675%" y="292" width="0.3900%" height="15" fill="rgb(249,149,8)" fg:x="3036" fg:w="12"/><text x="98.9175%" y="302.50"></text></g><g><title>_calculate_column_widths (rich\table.py:529) (16 samples, 0.52%)</title><rect x="98.5700%" y="260" width="0.5200%" height="15" fill="rgb(243,35,44)" fg:x="3033" fg:w="16"/><text x="98.8200%" y="270.50"></text></g><g><title>&lt;listcomp&gt; (rich\table.py:530) (16 samples, 0.52%)</title><rect x="98.5700%" y="276" width="0.5200%" height="15" fill="rgb(246,89,9)" fg:x="3033" fg:w="16"/><text x="98.8200%" y="286.50"></text></g><g><title>__rich_console__ (rich\table.py:488) (23 samples, 0.75%)</title><rect x="98.5700%" y="244" width="0.7475%" height="15" fill="rgb(233,213,13)" fg:x="3033" fg:w="23"/><text x="98.8200%" y="254.50"></text></g><g><title>_calculate_column_widths (rich\table.py:568) (7 samples, 0.23%)</title><rect x="99.0900%" y="260" width="0.2275%" height="15" fill="rgb(233,141,41)" fg:x="3049" fg:w="7"/><text x="99.3400%" y="270.50"></text></g><g><title>&lt;listcomp&gt; (rich\table.py:569) (6 samples, 0.19%)</title><rect x="99.1225%" y="276" width="0.1950%" height="15" fill="rgb(239,167,4)" fg:x="3050" fg:w="6"/><text x="99.3725%" y="286.50"></text></g><g><title>_measure_column (rich\table.py:733) (5 samples, 0.16%)</title><rect x="99.1550%" y="292" width="0.1625%" height="15" fill="rgb(209,217,16)" fg:x="3051" fg:w="5"/><text x="99.4050%" y="302.50"></text></g><g><title>split_and_crop_lines (rich\segment.py:305) (12 samples, 0.39%)</title><rect x="99.4150%" y="356" width="0.3900%" height="15" fill="rgb(219,88,35)" fg:x="3059" fg:w="12"/><text x="99.6650%" y="366.50"></text></g><g><title>render (rich\console.py:1340) (10 samples, 0.32%)</title><rect x="99.4800%" y="372" width="0.3250%" height="15" fill="rgb(220,193,23)" fg:x="3061" fg:w="10"/><text x="99.7300%" y="382.50"></text></g><g><title>__rich_console__ (rich\text.py:706) (6 samples, 0.19%)</title><rect x="99.6100%" y="388" width="0.1950%" height="15" fill="rgb(230,90,52)" fg:x="3065" fg:w="6"/><text x="99.8600%" y="398.50"></text></g><g><title>_render (rich\table.py:834) (16 samples, 0.52%)</title><rect x="99.3175%" y="260" width="0.5200%" height="15" fill="rgb(252,106,19)" fg:x="3056" fg:w="16"/><text x="99.5675%" y="270.50"></text></g><g><title>render_lines (rich\console.py:1380) (16 samples, 0.52%)</title><rect x="99.3175%" y="276" width="0.5200%" height="15" fill="rgb(206,74,20)" fg:x="3056" fg:w="16"/><text x="99.5675%" y="286.50"></text></g><g><title>split_and_crop_lines (rich\segment.py:305) (16 samples, 0.52%)</title><rect x="99.3175%" y="292" width="0.5200%" height="15" fill="rgb(230,138,44)" fg:x="3056" fg:w="16"/><text x="99.5675%" y="302.50"></text></g><g><title>render (rich\console.py:1340) (15 samples, 0.49%)</title><rect x="99.3500%" y="308" width="0.4875%" height="15" fill="rgb(235,182,43)" fg:x="3057" fg:w="15"/><text x="99.6000%" y="318.50"></text></g><g><title>__rich_console__ (rich\padding.py:97) (14 samples, 0.45%)</title><rect x="99.3825%" y="324" width="0.4550%" height="15" fill="rgb(242,16,51)" fg:x="3058" fg:w="14"/><text x="99.6325%" y="334.50"></text></g><g><title>render_lines (rich\console.py:1380) (13 samples, 0.42%)</title><rect x="99.4150%" y="340" width="0.4225%" height="15" fill="rgb(248,9,4)" fg:x="3059" fg:w="13"/><text x="99.6650%" y="350.50"></text></g><g><title>print (rich\console.py:1719) (46 samples, 1.49%)</title><rect x="98.4075%" y="132" width="1.4950%" height="15" fill="rgb(210,31,22)" fg:x="3028" fg:w="46"/><text x="98.6575%" y="142.50"></text></g><g><title>render (rich\console.py:1340) (43 samples, 1.40%)</title><rect x="98.5050%" y="148" width="1.3975%" height="15" fill="rgb(239,54,39)" fg:x="3031" fg:w="43"/><text x="98.7550%" y="158.50"></text></g><g><title>__rich_console__ (rich\live_render.py:87) (42 samples, 1.36%)</title><rect x="98.5375%" y="164" width="1.3650%" height="15" fill="rgb(230,99,41)" fg:x="3032" fg:w="42"/><text x="98.7875%" y="174.50"></text></g><g><title>render_lines (rich\console.py:1380) (42 samples, 1.36%)</title><rect x="98.5375%" y="180" width="1.3650%" height="15" fill="rgb(253,106,12)" fg:x="3032" fg:w="42"/><text x="98.7875%" y="190.50"></text></g><g><title>split_and_crop_lines (rich\segment.py:305) (42 samples, 1.36%)</title><rect x="98.5375%" y="196" width="1.3650%" height="15" fill="rgb(213,46,41)" fg:x="3032" fg:w="42"/><text x="98.7875%" y="206.50"></text></g><g><title>render (rich\console.py:1344) (41 samples, 1.33%)</title><rect x="98.5700%" y="212" width="1.3325%" height="15" fill="rgb(215,133,35)" fg:x="3033" fg:w="41"/><text x="98.8200%" y="222.50"></text></g><g><title>render (rich\console.py:1340) (41 samples, 1.33%)</title><rect x="98.5700%" y="228" width="1.3325%" height="15" fill="rgb(213,28,5)" fg:x="3033" fg:w="41"/><text x="98.8200%" y="238.50"></text></g><g><title>__rich_console__ (rich\table.py:515) (18 samples, 0.58%)</title><rect x="99.3175%" y="244" width="0.5850%" height="15" fill="rgb(215,77,49)" fg:x="3056" fg:w="18"/><text x="99.5675%" y="254.50"></text></g><g><title>all (3,077 samples, 100%)</title><rect x="0.0000%" y="52" width="100.0000%" height="15" fill="rgb(248,100,22)" fg:x="0" fg:w="3077"/><text x="0.2500%" y="62.50"></text></g><g><title>_bootstrap (threading.py:973) (95 samples, 3.09%)</title><rect x="96.9126%" y="68" width="3.0874%" height="15" fill="rgb(208,67,9)" fg:x="2982" fg:w="95"/><text x="97.1626%" y="78.50">_bo..</text></g><g><title>_bootstrap_inner (threading.py:1016) (95 samples, 3.09%)</title><rect x="96.9126%" y="84" width="3.0874%" height="15" fill="rgb(219,133,21)" fg:x="2982" fg:w="95"/><text x="97.1626%" y="94.50">_bo..</text></g><g><title>run (rich\live.py:32) (95 samples, 3.09%)</title><rect x="96.9126%" y="100" width="3.0874%" height="15" fill="rgb(246,46,29)" fg:x="2982" fg:w="95"/><text x="97.1626%" y="110.50">run..</text></g><g><title>refresh (rich\live.py:242) (57 samples, 1.85%)</title><rect x="98.1475%" y="116" width="1.8525%" height="15" fill="rgb(246,185,52)" fg:x="3020" fg:w="57"/><text x="98.3975%" y="126.50">r..</text></g></svg></svg>